{"version":3,"sources":["./src/app/modules/auth/auth.module.ts","./src/app/core/services/auth.service.ts","./src/environments/environment.ts","./src/app/modules/person/pages/add-person/addPerson.component.ts","./src/app/modules/person/pages/add-person/addPerson.component.html","./src/app/core/Url.ts","./src/app/core/http/interceptor.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/shared/pipes/age.pipe.ts","./src/app/modules/person/person.module.ts","./src/app/app.module.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/pages/login.component.html","./src/app/modules/auth/pages/login.component.ts","./src/app/shared/models/Person.ts","./src/app/core/http/http.service.ts","./src/app/core/services/person.service.ts","./src/app/modules/person/person.component.ts","./src/app/modules/person/person.component.html","./src/app/core/gaurds/OnlyLoggedInUsersGuard.ts","./src/app/modules/person/person-routing.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CardModule } from 'primeng/card';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginComponent } from './pages/login.component';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {PasswordModule} from 'primeng/password';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { AuthService } from 'src/app/core/services/auth.service';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    AuthRoutingModule,\r\n    PasswordModule,\r\n    InputTextModule,\r\n    FormsModule,\r\n    ButtonModule\r\n  ],\r\n  exports: [LoginComponent],\r\n  declarations: [LoginComponent],\r\n  providers: [AuthService]\r\n})\r\nexport class AuthModule {}\r\n\r\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { HttpService } from \"../http/http.service\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\nconst helper = new JwtHelperService();\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  constructor(private httpService: HttpService) {}\n  login(reqParam: any): Observable<any> {\n    return this.httpService.login(reqParam);\n  }\n  logout(){\n    localStorage.setItem(\"token\",\"\");\n  }\n  public getToken(): any {\n    return localStorage.getItem(\"token\");\n  }\n  public setToken(accessToken: any): any {\n    return localStorage.setItem(\"token\", accessToken);\n  }\n  public isAuthenticated(): boolean {\n    const token = this.getToken();\n    if (!token) {\n      return false;\n    } else {\n      const isExpired = helper.isTokenExpired(token);\n      return !isExpired;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PersonService } from 'src/app/core/services/person.service';\r\nimport { Person } from 'src/app/shared/models/Person';\r\n\r\n@Component({\r\n  selector: 'app-add-person',\r\n  templateUrl:'addPerson.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class AddPersonComponent implements OnInit {\r\n  constructor(private personService: PersonService) { }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addPerson():void{\r\n    const person = new Person();\r\n    this.personService.addPerson(person).subscribe(res=>{\r\n      alert(\"new Person added\");\r\n    })\r\n  }\r\n}\r\n","add person","import { Injectable } from \"@angular/core\";\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class URL {\r\n  readonly authURL = \"http://localhost:3000/api/v1/auth\";\r\n  readonly authURL2 = \"https://person-apk.herokuapp.com/auth\";\r\n  readonly addPersonURL = \"http://localhost:3000/api/v1/person\";\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from \"@angular/common/http\";\r\nimport { AuthService } from \"../services/auth.service\";\r\nimport { Observable } from \"rxjs\";\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(public auth: AuthService) {}\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.auth.getToken()}`,\r\n      },\r\n    });\r\n    return next.handle(request);\r\n  }\r\n}\r\n","\r\n<p-menubar [model]=\"items\">\r\n    <ng-template pTemplate=\"start\">\r\n        <img src=\"assets/logo.png\" height=\"40\" class=\"p-mr-2\">\r\n    </ng-template>\r\n    <ng-template pTemplate=\"end\">\r\n        hello\r\n        <input type=\"text\" pInputText placeholder=\"Search\">\r\n    </ng-template>\r\n</p-menubar>\r\n<router-outlet></router-outlet>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { PrimeNGConfig } from \"primeng/api\";\r\nimport { PersonService } from \"./core/services/person.service\";\r\n\r\nimport { MenuItem } from \"primeng/api\";\r\nimport { AuthService } from \"./core/services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"app.component.html\",\r\n  styles: [],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  items: MenuItem[] = [];\r\n  constructor(\r\n    private primengConfig: PrimeNGConfig,\r\n    private personService: PersonService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.items = [\r\n      {\r\n        label: \"Person\",\r\n        icon: \"pi pi-user\",\r\n        items: [\r\n          {\r\n            label: \"Add new person\",\r\n            icon: \"pi pi-plus\",\r\n            routerLink: \"add-person\",\r\n          },\r\n        ],\r\n      },\r\n      this.authService.isAuthenticated()\r\n        ? {\r\n            label: \"Logout\",\r\n            icon: \"pi pi-fw pi-power-off\",\r\n            command: () => {\r\n              this.logout();\r\n            },\r\n          }\r\n        : {\r\n            label: \"Login\",\r\n            icon: \"pi pi-lock\",\r\n            routerLink: \"login\",\r\n          },\r\n    ];\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.router.navigate([\"login\"]);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'age'\n})\nexport class AgePipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CardModule } from 'primeng/card';\r\nimport { PersonRoutingModule } from './person-routing.module';\r\nimport { PersonComponent } from './person.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CardModule,\r\n    PersonRoutingModule\r\n  ],\r\n  exports: [PersonComponent],\r\n  declarations: [PersonComponent],\r\n  providers: []\r\n})\r\nexport class PersonModule {}\r\n\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {ButtonModule} from 'primeng/button';\nimport { AgePipe } from './shared/pipes/age.pipe';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { PersonService } from './core/services/person.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PersonModule } from './modules/person/person.module';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { MenubarModule } from \"primeng/menubar\";\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './core/http/interceptor';\nimport { OnlyLoggedInUsersGuard } from './core/gaurds/OnlyLoggedInUsersGuard';\n@NgModule({\n  declarations: [\n    AppComponent,\n    AgePipe\n    \n  ],\n  imports: [\n    MenubarModule,\n    AuthModule,\n    PersonModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ButtonModule,\n    BrowserModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    OnlyLoggedInUsersGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OnlyLoggedInUsersGuard } from 'src/app/core/gaurds/OnlyLoggedInUsersGuard';\r\nimport { LoginComponent } from './pages/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","<br />\r\n<p-card>\r\n  <ng-template pTemplate=\"header\"> </ng-template>\r\n  <input type=\"text\" pInputText [(ngModel)]=\"username\" placeholder=\"Email\" />\r\n  <br /><br />\r\n  <p-password [(ngModel)]=\"password\" placeholder=\"Password\"></p-password>\r\n <br /><br />\r\n  <button (click)=\"login()\" pButton type=\"button\" label=\"Login\"></button>\r\n  <br>\r\n  <span *ngIf=\"errorMsg\" style=\"color: red;\">{{errorMsg}}</span>\r\n  \r\n  <ng-template pTemplate=\"footer\"> </ng-template>\r\n</p-card>\r\n","import { Route } from '@angular/compiler/src/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { PersonService } from 'src/app/core/services/person.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl:'login.component.html',\n  styles: [\n  ]\n})\nexport class LoginComponent implements OnInit {\n  username:any;\n  password:any;\n  errorMsg:string=\"\";\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  login():void{\n    if(!this.username){\n     this.errorMsg = \"Please enter username!\";\n      return;\n    }\n    if(!this.password){\n      this.errorMsg = \"Please enter password!\";\n       return;\n    }\n    this.errorMsg=\"\"\n    this.authService.login({username:this.username,password:this.password}).subscribe(res=>{\n      this.authService.setToken(res.accessToken);\n      console.log(\"success\")\n      this.router.navigate(['add-person'])\n\n    },err=>{\n      this.authService.setToken(\"\");\n      console.log(\"failed\")\n    });\n  }\n}\n","export class Person{\r\n    name?: string;\r\n    dob?: Date;\r\n    email?: string;\r\n    address?: string;\r\n    country?: string;\r\n}","import { HttpHeaders, HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Person } from \"src/app/shared/models/Person\";\nimport { URL } from \"../Url\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HttpService {\n  constructor(private http: HttpClient, private url: URL) {}\n  private contentHeader = new HttpHeaders({\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  });\n  login(reqParm: any): Observable<any> {\n    return this.http.post<any>(this.url.authURL, reqParm, {\n      headers: this.contentHeader,\n    });\n  }\n  addPerson(reqParm: Person): Observable<any> {\n    return this.http.post<any>(this.url.addPersonURL, reqParm, {\n      headers: this.contentHeader,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpService } from '../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n  constructor(private httpService: HttpService) { }\n  addPerson(reqParam: any):Observable<any>{\n      return this.httpService.addPerson(reqParam);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-person',\r\n  templateUrl:'person.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class PersonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","Person","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { AuthService } from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class OnlyLoggedInUsersGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router:Router) {}\r\n  canActivate() {\r\n    if (this.authService.isAuthenticated()) {\r\n      return true;\r\n    } else {\r\n      window.alert(\"You don't have permission to view this page\");\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OnlyLoggedInUsersGuard } from 'src/app/core/gaurds/OnlyLoggedInUsersGuard';\r\nimport { AddPersonComponent } from './pages/add-person/addPerson.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'add-person',\r\n    component: AddPersonComponent,\r\n    canActivate: [OnlyLoggedInUsersGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PersonRoutingModule {}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}